{"version":3,"sources":["components/TodoItem.jsx","components/Todo.jsx","components/layouts/Header.jsx","components/AddTodo.jsx","App.js","serviceWorker.js","index.js"],"names":["TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","border","padding","background","color","textDecoration","props","todo","isCompleted","getBtnStyle","float","borderRadius","width","height","cursor","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","style","type","onChange","onChecked","bind","onClick","onDelete","Component","Todo","map","todo_item","components_TodoItem","updateChecked","Header","textAlign","fontSize","className","AddTodo","display","getTxtStyle","handleChange","event","setState","text","target","state","placeholder","handleSubmit","App","items","item","updateDelete","filter","handleAddTodo","componentDidUpdate","console","log","layouts_Header","components_AddTodo","components_Todo","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.197cd479.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class TodoItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            border: '1px solid grey',\r\n            padding: '10px',\r\n            background: '#445358',\r\n            color: 'white',\r\n            textDecoration: this.props.todo.isCompleted ? 'line-through' : 'none' ,\r\n        };\r\n    }\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            float: 'right',\r\n            color: 'white',\r\n            background: '#BCCC6B',\r\n            borderRadius: '25px',\r\n            border: 'none',\r\n            width: '25px',\r\n            height: '25px',\r\n            cursor: 'pointer',\r\n        };\r\n    }\r\n\r\n\r\n    render() {\r\n        const {id, title} = this.props.todo;\r\n\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    onChange={this.props.onChecked.bind(this, id)}\r\n                /> {' '}\r\n                {title}\r\n                <input style={this.getBtnStyle()}\r\n                    type=\"submit\"\r\n                    onClick={this.props.onDelete.bind(this, id)}\r\n                    value=\"X\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem\r\n\r\n","import React, { Component } from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nexport class Todo extends Component {\r\n    render() {\r\n        return (this.props.todo.map((todo_item) => \r\n            <TodoItem todo={todo_item} key={todo_item.id} onChecked={this.props.updateChecked} onDelete={this.props.onDelete}/>\r\n        ));\r\n    }\r\n}\r\n\r\nexport default Todo\r\n","import React, { Component } from 'react'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Header\" style={this.getStyle()}>\r\n                REACT TODO LIST\r\n            </div>\r\n        )\r\n    }\r\n    getStyle = () => {\r\n        return { \r\n            background: '#61A49C',\r\n            color: '#FFF',\r\n            textAlign: 'center',\r\n            padding: '10px',\r\n            fontSize: '50px'\r\n        };\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class AddTodo extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            display: 'flex',\r\n            height: '35px',\r\n        };\r\n    }\r\n\r\n    getBtnStyle = () => {\r\n        return {\r\n            width:'10%',\r\n            cursor:'pointer',\r\n            border: 'none',\r\n            background: '#20303E',\r\n            color: 'white',\r\n        };\r\n    }\r\n\r\n    // styling for input textbox\r\n    getTxtStyle = () => {\r\n        return {\r\n            width: '90%',\r\n            fontSize: '20px',\r\n            border: 'none',\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    state={\r\n        text: ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <input \r\n                    style={this.getTxtStyle()}\r\n                    type=\"text\"\r\n                    placeholder=\"Add Todo\"\r\n                    value={this.state.text}\r\n                    onChange={this.handleChange.bind(this)}\r\n                />\r\n                <input\r\n                    style={this.getBtnStyle()}\r\n                    type=\"submit\"\r\n                    onClick={this.props.handleSubmit.bind(this, this.state.text)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Todo from './components/Todo'\r\nimport Header from './components/layouts/Header'\r\nimport AddTodo from './components/AddTodo'\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        items: []\r\n    }\r\n    updateChecked = (id) => {\r\n        this.setState({ items: this.state.items.map(item => {\r\n            if(item.id === id){\r\n                item.isCompleted = !item.isCompleted;\r\n            }\r\n            return item;\r\n        })});\r\n    }\r\n\r\n    updateDelete = (id) => {\r\n        this.setState({ items: this.state.items.filter(item =>\r\n            item.id !== id    \r\n        )});\r\n    }\r\n\r\n    handleAddTodo = (title) => {\r\n        this.setState( { items: this.state.items.concat({id: this.state.items.length+1, title: title, isCompleted: false})\r\n\r\n        })\r\n    }\r\n    componentDidUpdate = () => {\r\n        console.log(\"updated\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <AddTodo handleSubmit={this.handleAddTodo}/>\r\n                <Todo todo={this.state.items} updateChecked={this.updateChecked} onDelete={this.updateDelete}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}